{"version":3,"sources":["webpack:///src/app/components/lista-pastas/lista-pastas.component.html","webpack:///src/app/components/lista-pastas/lista-pastas.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/novos/novos.component.ts","webpack:///src/app/components/novos/novos.component.html","webpack:///src/app/components/select-classificador/select-classificador.component.html","webpack:///src/app/components/select-classificador/select-classificador.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/services/get-fotos-bucket.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/get-lista-pastas.service.ts","webpack:///src/app/components/janela-modal-classificar/janela-modal-classificar.component.ts","webpack:///src/app/components/janela-modal-classificar/janela-modal-classificar.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ListaPastasComponent","activatedRoute","getFotosBucketService","nome_pasta","getUrl_imagem_METODO","getUrl_imagem","subscribe","url_foto","reverse","environment","production","KEY_CODE","NovosComponent","etiqueta","indice_imagen","maximo_indice_imagen","imagem","par","snapshot","paramMap","get","event","console","log","keyCode","RIGHT_ARROW","increment","LEFT_ARROW","decrement","UP_ARROW","increment_10","DOWN_ARROW","decrement_10","length","SelectClassificadorComponent","nova_etiqueta","target","value","selectChangeHandler","AppComponent","GetFotosBucketService","httpClient","url","httpOptions","headers","pipe","handleError","error","errorMessage","ErrorEvent","message","status","AppModule","GetListaPastasService","JanelaModalClassificarComponent","modalService","closeResult","funcionalidade_botao","nome_imagem","etiqueta_imagem","content","open","ariaLabelledBy","result","then","reason","ESC","BACKDROP_CLICK","routes","path","component","AppRoutingModule","forRoot","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["\n\n<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">    \n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"\" id=\"dropdown01\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Funcionalidades</a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n<a class=\"dropdown-item\" href=\"./novo/novo\">novo</a>\n            <li *ngFor=\"let etiquetas of nome_pasta\" >                \n                <a class=\"dropdown-item\" href=\"./{{etiquetas}}/{{etiquetas}}\">{{etiquetas}}</a>\n              </li>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\n// Serviço para consomer a API (método GET) \n\nimport { GetListaPastasService } from '../../services/get-lista-pastas.service';\n\n@Component({\n  selector: 'app-lista-pastas',\n  templateUrl: './lista-pastas.component.html',\n  styleUrls: ['./lista-pastas.component.css']\n})\n\n  export class ListaPastasComponent implements OnInit {\n\n    nome_pasta: String[]=[];\n\n    constructor(private activatedRoute: ActivatedRoute,private getFotosBucketService: GetListaPastasService) {\n    }\n\n    ngOnInit(): void {\n\n      this.getUrl_imagem_METODO();\n\n    }\n\n    // Chama o serviço para obtém todas as fotos\n\n    url_foto : String[] | undefined;  \n\n    getUrl_imagem_METODO() {\n      this.getFotosBucketService.getUrl_imagem(\"\").subscribe((url_foto: String[]) => {\n        this.nome_pasta = url_foto.reverse();    \n      });\n  ///////////////////////////////\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/****************************************************\n\n\n****************************************************/\n\nimport { Component, OnInit } from '@angular/core';\n\n//Essencial para capturar os eventos do teclado:\nimport { HostListener } from '@angular/core';\n\n// Coletando o parametro ETIQUETA pode-se consultar o DB para ver as classificações\n\nimport { ActivatedRoute } from '@angular/router';\n\n// Serviço para consomer a API (método GET) \n\nimport { GetFotosBucketService } from '../../services/get-fotos-bucket.service';\n\nexport enum KEY_CODE {\n  RIGHT_ARROW = 39,\n  LEFT_ARROW = 37,\n\n  UP_ARROW = 38,\n  DOWN_ARROW = 40\n}\n\n@Component({\n  selector: 'app-novos',\n  templateUrl: './novos.component.html',\n  styleUrls: ['./novos.component.css']\n})\n\n\nexport class NovosComponent implements OnInit {\n\n  etiqueta=\"juridico\";\n\n  indice_imagen=0;\n\n  maximo_indice_imagen=0;\n\n  imagem: String[]=[];\n\n  \n  constructor(private activatedRoute: ActivatedRoute,private getFotosBucketService: GetFotosBucketService) {\n  }\n\n  /*\n  Quando for procurado (https://docker-2-julian.herokuapp.com/saida_oficina/saida_oficina)\n  ele vai coletar o parametro da URL \n  \n  (  { path: ':parametro/:parametro'<----------------------------,\n)\n  Lembremos da definicao do APP-ROUTING.MODULE.TS:\n\n    { path: ':parametro/:parametro', component: NovosComponent },\n\n   */\nngOnInit() {\n    \n    const par = this.activatedRoute.snapshot.paramMap.get('parametro');\n    this.etiqueta=par+\"\";\n    this.getUrl_imagem_METODO();\n}\n\n\n@HostListener('window:keyup', ['$event'])\nkeyEvent(event: KeyboardEvent) {\n  console.log(event);\n\n  if (event.keyCode === KEY_CODE.RIGHT_ARROW) {\n    this.increment();\n  }\n\n  if (event.keyCode === KEY_CODE.LEFT_ARROW) {\n    this.decrement();\n  }\n\n//Verticais para acelerar a navegação:\n\n  if (event.keyCode === KEY_CODE.UP_ARROW) {\n    this.increment_10();\n  }\n\n  if (event.keyCode === KEY_CODE.DOWN_ARROW) {\n    this.decrement_10();\n  }\n}\n\n  increment() {    \n\n    if((this.indice_imagen+1)<this.maximo_indice_imagen)\n    {\n      this.indice_imagen++;    \n    }    \n  }\n\n  decrement() {\n\n    if(this.indice_imagen>0)\n    {\n      this.indice_imagen--;\n    }    \n  }\n//Verticais para acelerar a navegação, em passos de 10\n  increment_10() {\n    \n    if((this.indice_imagen+10)<this.maximo_indice_imagen)\n    {\n      this.indice_imagen+=10;\n    }    \n  }\n\n  decrement_10() {\n\n    if(this.indice_imagen>10)\n    {\n      this.indice_imagen-=10;\n    }     \n  }\n\n/****************************************************\n\n\n****************************************************/\n\n// Chama o serviço para obtém todas as fotos\n\n  url_foto : String[] | undefined;  \n\n  getUrl_imagem_METODO() {\n    this.getFotosBucketService.getUrl_imagem(this.etiqueta).subscribe((url_foto: String[]) => {\n      this.imagem = url_foto.reverse();    \n      this.maximo_indice_imagen=url_foto.length;  \n      \n    });\n  }\n\n///////\n}\n\n\n","\n<!--Header do Boostrap--------->\n<header>\n    <div class=\"bg-dark collapse\" id=\"navbarHeader\" >\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-sm-8 col-md-7 py-4\">\n            <h4 class=\"text-white\">Funções</h4>\n            <p class=\"text-muted\">\nSistema básico de gestão de frota<br>\nvisualização de notas fiscais, multas, etc..<br>\nDemo em Heroku<br>\n</p>\n          </div>\n          <div class=\"col-sm-4 offset-md-1 py-4\">\n            <h4 class=\"text-white\">Julian Gamboa</h4>\n            <ul class=\"list-unstyled\">\n              <li><a href=\"https://github.com/julian-gamboa-bahia\" class=\"text-white\">Github</a></li>\n              <li><a href=\"https://github.com/julian-gamboa-ensino\" class=\"text-white\">Github Eduativo</a></li>\n              <li><a href=\"https://www.linkedin.com/in/julian-gamboa-bahia/\" class=\"text-white\">Linkeind</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"navbar navbar-dark bg-dark box-shadow\">\n      <div class=\"container d-flex justify-content-between\">\n<a href=\"https://docker-2-julian.herokuapp.com\" class=\"navbar-brand d-flex align-items-center\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"mr-2\"><path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path><circle cx=\"12\" cy=\"13\" r=\"4\"></circle></svg>\n          <strong> {{etiqueta}} (2022) </strong>\n        </a>\n        <button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarHeader\" aria-controls=\"navbarHeader\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n      </div>\n    </div>\n</header>\n<!--END Header do Boostrap--------->          \n<main role=\"main\">\n<div class=\"album py-5 bg-light\">\n<div class=\"container\">          \n<!--ROW. Inicio---------> \n<div class=\"row\">\n<!--Elemento da Matriz---------> \n<div class=\"col-md-4\">\n<div class=\"card mb-4 box-shadow\">\n<!--Image--------->          \n          <img id=\"imagem-1\" src=\"{{imagem[indice_imagen]}}\"\n          class=\"card-img-top\" alt=\"Image 1\" style=\"height: 225px; width: 100%; display: block;\" \n           >\n\n<app-janela-modal-classificar \nnome_imagem=\"{{imagem[indice_imagen]}}\"\netiqueta_imagem=\"{{etiqueta}}\" >  \n</app-janela-modal-classificar>\n\n</div>\n</div>\n<!--COL------>           \n<div class=\"col-md-4\">\n<div class=\"card mb-4 box-shadow\">\n<!--Image--------->          \n          <img id=\"imagem-2\" src=\"{{imagem[indice_imagen+1]}}\"\n          class=\"card-img-top\" alt=\"Image 2\" style=\"height: 225px; width: 100%; display: block;\" \n          >\n          <app-janela-modal-classificar \n          nome_imagem=\"{{imagem[indice_imagen]}}\"\n          etiqueta_imagem=\"{{etiqueta}}\" >  \n          </app-janela-modal-classificar>\n        </div>\n</div>\n<!--END: COL. ------>      \n<!--COL. ------>           \n<div class=\"col-md-4\">\n<div class=\"card mb-4 box-shadow\">\n<!--Image--------->          \n  <img id=\"imagem-3\" src=\"{{imagem[indice_imagen+2]}}\"\n  class=\"card-img-top\" alt=\"Image 3\" style=\"height: 225px; width: 100%; display: block;\" \n  >\n  <app-janela-modal-classificar \n  nome_imagem=\"{{imagem[indice_imagen]}}\"\n  etiqueta_imagem=\"{{etiqueta}}\" >  \n  </app-janela-modal-classificar>\n</div>\n</div>\n<!--END: COL. ------>      \n</div>  \n<!--END: ROW. ------>\n\n\n<!--ROW. Inicio---------> \n<div class=\"row\">\n<!--Elemento da Matriz---------> \n<div class=\"col-md-4\">\n<div class=\"card mb-4 box-shadow\">\n<!--Image--------->          \n          <img id=\"imagem-4\" src=\"{{imagem[indice_imagen+3]}}\"\n          class=\"card-img-top\" alt=\"Image 4\" style=\"height: 225px; width: 100%; display: block;\" \n          >\n          <app-janela-modal-classificar \n          nome_imagem=\"{{imagem[indice_imagen]}}\"\n          etiqueta_imagem=\"{{etiqueta}}\" >  \n          </app-janela-modal-classificar>\n                </div>\n</div>\n<!--COL. ------>           \n<div class=\"col-md-4\">\n<div class=\"card mb-4 box-shadow\">\n<!--Image--------->          \n          <img id=\"imagem-5\" src=\"{{imagem[indice_imagen+4]}}\"\n          class=\"card-img-top\" alt=\"Image 5\" style=\"height: 225px; width: 100%; display: block;\" \n          >\n          <app-janela-modal-classificar \n          nome_imagem=\"{{imagem[indice_imagen]}}\"\n          etiqueta_imagem=\"{{etiqueta}}\" >  \n          </app-janela-modal-classificar>\n        </div>\n</div>\n<!--END: COL. ------>      \n<!--COL. ------>           \n<div class=\"col-md-4\">\n<div class=\"card mb-4 box-shadow\">\n<!--Image--------->          \n  <img id=\"imagem-6\" src=\"{{imagem[indice_imagen+5]}}\"\n  class=\"card-img-top\" alt=\"Image 6\" style=\"height: 225px; width: 100%; display: block;\" \n  >\n  <app-janela-modal-classificar \n  nome_imagem=\"{{imagem[indice_imagen]}}\"\n  etiqueta_imagem=\"{{etiqueta}}\" >  \n  </app-janela-modal-classificar>\n</div>\n</div>\n<!--END: COL. ------>      \n</div>  \n<!--END: ROW. ------>\n\n\n\n<!--ROW. Inicio---------> \n<div class=\"row\">\n<!--Elemento da Matriz---------> \n<div class=\"col-md-4\">\n<div class=\"card mb-4 box-shadow\">\n<!--Image--------->          \n          <img id=\"imagem-7\" src=\"{{imagem[indice_imagen+6]}}\"\n          class=\"card-img-top\" alt=\"Image 7\" style=\"height: 225px; width: 100%; display: block;\" \n          >\n          <app-janela-modal-classificar \n          nome_imagem=\"{{imagem[indice_imagen]}}\"\n          etiqueta_imagem=\"{{etiqueta}}\" >  \n          </app-janela-modal-classificar>\n        </div>\n</div>\n<!--COL. ------>           \n<div class=\"col-md-4\">\n<div class=\"card mb-4 box-shadow\">\n<!--Image--------->          \n          <img id=\"imagem-8\" src=\"{{imagem[indice_imagen+7]}}\"\n          class=\"card-img-top\" alt=\"Image 8\" style=\"height: 225px; width: 100%; display: block;\" \n          >\n          <app-janela-modal-classificar \n          nome_imagem=\"{{imagem[indice_imagen]}}\"\n          etiqueta_imagem=\"{{etiqueta}}\" >  \n          </app-janela-modal-classificar>\n        </div>\n</div>\n<!--END: COL. ------>      \n<!--COL. ------>           \n<div class=\"col-md-4\">\n<div class=\"card mb-4 box-shadow\">\n<!--Image--------->          \n  <img id=\"imagem-9\" src=\"{{imagem[indice_imagen+8]}}\"\n  class=\"card-img-top\" alt=\"Image 9\" style=\"height: 225px; width: 100%; display: block;\" \n  >\n  <app-janela-modal-classificar \n  nome_imagem=\"{{imagem[indice_imagen]}}\"\n  etiqueta_imagem=\"{{etiqueta}}\" >  \n  </app-janela-modal-classificar>\n</div>\n</div>\n<!--END: COL. ------>      \n</div>  \n<!--END: ROW. ------>\n</div>\n</div>\n</main>\n\n  <footer class=\"text-muted\">\n    <div class=\"container\">\n\n      <p>Colocado no meu <a href=\"https://github.com/julian-gamboa-ensino/node-gestor-imagens\">Github de ensino</a> </p>                        \n    </div>\n  </footer>\n","<select  (change)=\"selectChangeHandler($event)\">\n  <option *ngFor=\"let etiquetas of nome_pasta\"  >\n    {{etiquetas}}\n  </option>\n</select>\n\n","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { GetFotosBucketService } from '../../services/get-fotos-bucket.service';\n\n@Component({\n  selector: 'app-select-classificador',\n  templateUrl: './select-classificador.component.html',\n  styleUrls: ['./select-classificador.component.css']\n})\n\n// Serviço para consomer a API (método GET)\n\n  export class SelectClassificadorComponent implements OnInit {\n\n    //Uma vez feita a escolha da ETIQUETA será chamado o POST\n\n    nova_etiqueta: string = '';\n\n    //event handler for the select element's change event\n    selectChangeHandler (event: any) {\n      //update the ui\n      this.nova_etiqueta = event.target.value;\n    }\n\n////////////////////\n    nome_pasta: String[]=[\n      //carro pequeno\n      'lavagem semanal',\n      'abastecimento de gasolina',\n      'emergencia de infraçao',\n      'ocorrência de furto',\n      ''      \n    ];\n\n    constructor(private activatedRoute: ActivatedRoute,private getFotosBucketService: GetFotosBucketService) {\n    }\n\n    ngOnInit(): void {\n\n      this.getUrl_imagem_METODO();\n\n    }\n\n    // Chama o serviço para obtém todas as fotos\n\n    url_foto : String[] | undefined;  \n\n    getUrl_imagem_METODO() {\n      this.getFotosBucketService.getUrl_imagem(\"\").subscribe((url_foto: String[]) => {\n        this.nome_pasta = url_foto.reverse();    \n      });\n  ///////////////////////////////\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  \n}\n","\n<!--Componente:\n  lista-pastas\n\n  .-->\n\n\n<app-lista-pastas></app-lista-pastas>\n\n\n<main role=\"main\" class=\"container\">\n\n</main><!-- /.container -->\n\n\n<router-outlet></router-outlet>","/*\nEntrega a lista de fotos presentes na pasta local (ou bucket da S3)\n*/\n\nimport { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/*\nServiço SIMPLES para consultar uma API que lista-se as fotos contidas num bucker\n*/\n\nexport class GetFotosBucketService {\n\n  url = \n  //\"http://localhost:31/\";\n  \"https://docker-2-julian.herokuapp.com/\";\n  \n\n// injetando o HttpClient\n    constructor(private httpClient: HttpClient) { }\n\n    // Headers\n    httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    }\n  \n    // Obtém a lista de fotos conforme a ETIQUETA usada na consulta\n    \n    getUrl_imagem(etiqueta: String): Observable<String[]> {\n      return this.httpClient.get<String[]>(this.url+etiqueta)\n        .pipe(\n          retry(2),\n          catchError(this.handleError))\n    }\n  \n \n    // Manipulação de erros\n    handleError(error: HttpErrorResponse) {\n      let errorMessage = '';\n      if (error.error instanceof ErrorEvent) {\n        // Erro ocorreu no lado do client\n        errorMessage = error.error.message;\n      } else {\n        // Erro ocorreu no lado do servidor\n        errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    };\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NovosComponent } from './components/novos/novos.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { ListaPastasComponent } from './components/lista-pastas/lista-pastas.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { JanelaModalClassificarComponent } from './components/janela-modal-classificar/janela-modal-classificar.component';\nimport { SelectClassificadorComponent } from './components/select-classificador/select-classificador.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NovosComponent,\n    ListaPastasComponent,\n    JanelaModalClassificarComponent,\n    SelectClassificadorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/*\nEntrega a lista de pastas na FONTE \n*/\n\nimport { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/*\nServiço SIMPLES para consultar uma API que lista-se as fotos contidas num bucker\n*/\n\nexport class GetListaPastasService {\n\n  url = \n//  \"http://localhost:31/lista_pastas\";\n  \"https://docker-2-julian.herokuapp.com/lista_pastas\";\n\n  \n\n// injetando o HttpClient\n    constructor(private httpClient: HttpClient) { }\n\n    // Headers\n    httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n    }\n  \n    // Obtem todos os carros\n    getUrl_imagem(etiqueta: String): Observable<String[]> {\n      return this.httpClient.get<String[]>(this.url+etiqueta)\n        .pipe(\n          retry(2),\n          catchError(this.handleError))\n    }\n  \n \n    // Manipulação de erros\n    handleError(error: HttpErrorResponse) {\n      let errorMessage = '';\n      if (error.error instanceof ErrorEvent) {\n        // Erro ocorreu no lado do client\n        errorMessage = error.error.message;\n      } else {\n        // Erro ocorreu no lado do servidor\n        errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n      }\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    };\n}\n\n","import { Component, OnInit,Input } from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-janela-modal-classificar',\n  templateUrl: './janela-modal-classificar.component.html',\n  styleUrls: ['./janela-modal-classificar.component.css']\n})\n\n\nexport class JanelaModalClassificarComponent {\n  closeResult = '';\n// Botão MODAL, cuja funcionalidade \n  funcionalidade_botao: string = 'funcionalidade_botao';\n\n  @Input() nome_imagem: string; \n\n  @Input() etiqueta_imagem: string; \n\n\n  constructor(private modalService: NgbModal) {\n    this.nome_imagem=\"\";\n    this.etiqueta_imagem=\"\";\n  }\n\n  open(content: any) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'})\n    .result.then((result) => {\n      this.closeResult = `PUT com a : ${result}`;\n    }, (reason) => {\n      this.closeResult = `inputNumber ${this.nome_imagem}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n}\n","<ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">\n        Funcionalidade\n      </h4>\n<!--     \n<button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n  <span aria-hidden=\"true\">&times;</span>\n</button>\n-->\n    </div>\n    <div class=\"modal-body\">\n      <form>\n        <div class=\"form-group\">\n<!--     SELECTOR -->\n          <app-select-classificador></app-select-classificador>          \n<!--     \n            <div class=\"input-group\">\n            <input id=\"dateOfBirth\" class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" ngbDatepicker #dp=\"ngbDatepicker\">\n            <div class=\"input-group-append\">     \n              <button class=\"btn btn-outline-secondary calendar\" (click)=\"dp.toggle()\" type=\"button\"></button>\n      </div>\n      </div>\n  -->\n        </div>\n      </form>\n    </div>\n    <div class=\"modal-footer\">\n<!--        \n  Classificador:\n  -->\n<button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('ETIQUETA: ')\">\nFuncionalidade ({{etiqueta_imagem}})\n</button>\n    </div>\n</ng-template>\n<!--  \n  Parte visivel da janela modal:\n\n  <button class=\"btn btn-lg btn-outline-primary\" (click)=\"open(content)\">\n{{funcionalidade_botao}}{{nome_imagem}}\n</button>\n\n  -->\n<button class=\"btn btn-lg btn-outline-primary\" (click)=\"open(content)\">\n{{etiqueta_imagem}}\n</button>\n  <hr>\n<!-- \n  <pre>{{ closeResult }}</pre>\n\n-->\n\n","/*\n\n*/\n\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n//Componente para classificar as NOVAS fotos\n\nimport { NovosComponent } from './components/novos/novos.component';\n\n//Componente para ver a lista de pastas que funcionam como ETIQUETAS\n\nimport { ListaPastasComponent } from './components/lista-pastas/lista-pastas.component';\n\n\nconst routes: Routes = [\n  //Por exempl,o \"http://localhost:4200\" lista as ETIQUETAS (pastas criadas na pasta de etiquetas)\n  { path: '', component: ListaPastasComponent },\n  //Por exempl,o \"http://localhost:4200/livros\" visualiza as fotos presentas em LIVROS\n  { path: ':parametro/:parametro', component: NovosComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { \n\n  \n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}